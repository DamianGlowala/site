---
import '../styles/fonts.css';
import '../styles/app.css';
import '../styles/tailwind.css';

import clsx from 'clsx';

import { ViewTransitions } from 'astro:transitions';

import MetaTags from './parts/meta-tags.astro';

export interface Props {
  title: string;
  description: string;
  announcementBar?: boolean;
  breadcrumbBar?: boolean;
  theme?: 'secondary';
}

const { title, description, announcementBar, breadcrumbBar, theme } = Astro.props;
---

<html class={clsx(theme === 'secondary' && 'theme-secondary')} lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/manifest.json" />

    <MetaTags {title} {description} />
    <ViewTransitions fallback="none" />

    <script src="../scripts/scroll-top.ts"></script>
    <script src="../scripts/focus-visible.js"></script>
    <script src="../scripts/docs-link.ts"></script>

    <script is:inline>
      const key = 'vidstack::color-scheme',
        scheme = localStorage[key],
        prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches,
        schemeRoot = document.documentElement;
      if (scheme === 'dark' || (scheme !== 'light' && prefersDark)) {
        schemeRoot.classList.add('dark');
        schemeRoot.classList.remove('light');
      } else {
        schemeRoot.classList.remove('dark');
        schemeRoot.classList.add('light');
      }
    </script>
  </head>
  <body
    class="bg-body text-inverse min-w-screen min-h-screen overflow-x-hidden"
    data-announcement-bar={announcementBar}
    data-breadcrumb-bar={breadcrumbBar}
  >
    <slot />
  </body>
</html>
